Exercice 1:

### Explication du Code`:

- Vérification de la Taille du Tableau : La fonction commence par vérifier que le tableau a exactement 5 éléments.

- Initialisation des Comptes : Un tableau est initialisé pour compter les occurrences de chaque caractère.

- Comptage des Occurrences : Une boucle for parcourt chaque élément du tableau et incrémente le compteur correspondant dans $counts. Si une valeur non attendue est trouvée, la fonction retourne false.

- Obtention des Fréquences : Les valeurs du tableau $counts sont extraites et stockées dans $frequencies.

- Vérification des Conditions : Une autre boucle for parcourt les fréquences et vérifie si l'une d'elles est 2 et l'autre est 3.

- Résultat : La fonction retourne true si les deux conditions (présence de 2 et 3 occurrences) sont remplies, sinon elle retourne false.

``Code PHP``

<?php
function hasThreeAndTwo($arr)
{

    // Vérifier que le tableau a exactement 5 éléments
    if (count($arr) != 5) {
        return false;
    }

    // Initialiser un tableau pour compter les occurrences
    $counts = ['a' => 0, 'b' => 0, 'c' => 0];

    // Compter les occurrences des éléments dans le tableau
    for ($i = 0; $i < count($arr); $i++) {
        $value = $arr[$i];
        if (isset($counts[$value])) {
            $counts[$value]++;
        } else {
            // Si une valeur différente de 'a', 'b' ou 'c' est trouvée, retourner false
            return false;
        }
    }

    // Obtenir les fréquences des valeurs
    $frequencies = array_values($counts);

    // Vérifier si les fréquences sont exactement 2 et 3
    $hasTwo = false;
    $hasThree = false;

    for ($i = 0; $i < count($frequencies); $i++) {
        if ($frequencies[$i] == 2) {
            $hasTwo = true;
        } elseif ($frequencies[$i] == 3) {
            $hasThree = true;
        }
    }

    return $hasTwo && $hasThree;
}
?>


Exercice 2:

```
Explication du code:

- La fonction prend en paramètre deux tableaux a et b
- Dans la variable résulta la fonction array_diff retoune les éléments du tableau a qui ne sont pas dans le tableau b
- La fonction array_values quant à elle réorganise le tableau résultat afin que chaque élément soit à la bonne position

<?php

function arrayDiff($a, $b)
{
    // array_diff sert à obtenir les éléments de $a qui ne sont pas dans $b
    $result = array_diff($a, $b);

    // array_values pour réindex le tableau résultat
    return array_values($result);
}

?>

Exercice 3:

```
Explication du code:

- La chaîne ($valleur) est converti en minuscules
- le tableau tableau tab permet de compter les occurrences de chaque caractère
- Un compteur est initialiser à 0pour checker les doublons
- La coondition foreach permet de Boucler sur chaque caractère dans la chaîne
- A la fin le nombre de doublons est afficher


<?php
function duplicateCount($valeur)
{

    $valeur = strtolower($valeur);
    $tab = [];
    $compt = 0;

    foreach (str_split($valeur) as $char) {

        if (isset($tab[$char])) {
            $tab[$char]++;

            if ($tab[$char] == 2) {
                $compt++;
            }
        } else {
            $tab[$char] = 1;
        }
    }
    return $compt;
}
?>