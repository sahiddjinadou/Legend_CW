Exercice 3
Compter le nombre de doublons Écrivez une fonction qui renverra le nombre de caractères alphabétiques distincts, insensibles à la casse, et de chiffres numériques qui apparaissent plusieurs fois dans la chaîne d'entrée. On peut supposer que la chaîne d'entrée contient uniquement des lettres (majuscules et minuscules) et des chiffres numériques.

Exemple "abcde" -> 0 # no characters repeats more than once "aabbcde" -> 2 # 'a' and 'b' "aabBcde" -> 2  # 'a' occurs twice and 'b' twice (bandB) "indivisibilité" -> 1  # 'i' occurs six times "Indivisibilités" -> 2 # 'i' occurs seven times and 's' occurs twice "aA11" -> 2 # 'a' and '1' "ABBA" -> 2 # 'A' and 'B' each occur twice



####
exercice 2####

var_dump(verified(["a", "b", "c", "b", "c"])); 
var_dump(verified(["a", "a", "a", "a", "a"])); 


function arrayDiff($a, $b) {
    // Convertir $b en un tableau associatif pour une recherche rapide
    $b_values = array_flip($b);

    // Filtrer les elements de $a pour exclure ceux qui sont dans $b
    return array_filter($a, function($value) use ($b_values) {
        return !isset($b_values[$value]);
    });
}

print_r(arrayDiff([1, 2], [1]));        // Output: [2]
print_r(arrayDiff([1, 2, 2, 2, 3], [2])); // Output: [1, 3]

exercice 3####

function duplicateCount($texte) {
    // Convertion de touts les caractères en minuscules pour une verification de la casse
    $texte = strtolower($texte);

    // Créer un tableau pour stocker les occurrences de chaque caractère
    $lettreCount = [];

    // Compter les occurrences de chaque caractère
    for ($i = 0; $i < strlen($texte); $i++) {
        $lettre = $texte[$i];
        if (ctype_alnum($lettre)) {
            if (isset($lettreCount[$lettre])) {
                $lettreCount[$lettre]++;
            } else {
                $lettreCount[$lettre] = 1;
            }
        }
    }

    //  nombre fois que caractère apparait.
    $duplicates = 0;
    foreach ($lettreCount as $count) {
        if ($count > 1) {
            $duplicates++;
        }
    }

    return $duplicates;
}
